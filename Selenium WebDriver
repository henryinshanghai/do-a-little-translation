Selenium WebDriver

最近Selenium的最大变化是它包含进了WebDriver API。
用户得以在本地原生地驱动浏览器，或者使用Selenium Server驱动远程机器上的浏览器。
它标志着浏览器自动化方面的飞跃。

Selenium WebDriver与RC的作用相同，并且包含了原始的1.x绑定。
【“原始的1.x绑定”指的是语言绑定和各个浏览器控制代码的实现。】
这通常被称为“WebDriver”或有时被称为Selenium 2。

Selenium 1.0 + WebDriver = Selenium 2.0
1 WebDriver采用更简单，更简洁的编程接口设计，同时解决了Selenium-RC API中的一些限制。
2 与Selenium1.0相比，WebDriver是一个紧凑的面向对象的API
3 它更有效地驱动浏览器并克服了Selenium 1.x的局限性，这些局限性影响了我们的功能测试覆盖率
——如文件上传或下载，弹出窗口和对话框障碍（？？？）
4 WebDriver克服了Selenium RC单主机来源政策的限制
-----
同源策略；
在计算中，同源策略是Web应用程序安全模型中的一个重要概念。
根据该策略，Web浏览器允许“第一个Web页面”中所包含的脚本访问“第二个Web页面”中的数据，
但前提是两个Web页面具有相同的源。
"源"定义为URI方案，主机名和端口号的组合。
此策略可防止“一个页面上的恶意脚本”通过该页面的文档对象模型访问"另一个网页"上的敏感数据。
---
文档对象模型；
文档对象模型（DOM）
是？跨平台且与语言无关的应用程序编程接口。
作用？表示具有逻辑树的文档
特征：
  1 它将XML文档视为树结构，其中每个节点是表示文档的一部分的对象。
  2 树的每个分支以节点结束，每个节点包含对象。
  3 DOM方法允许以编程方式访问树;使用DOM方法可以改变文档的结构，样式或内容。
  4 节点可以附加事件处理程序。一旦触发事件后，事件处理程序将被执行。
说明：
  1 DOM的主要标准化由万维网联盟处理，该联盟最后在2004年提出了一项建议。
  2 WHATWG接管了该标准的开发，并将其作为一份动态的文件发布。
  3 W3C现在发布了WHATWG标准的稳定快照。
 ---
 评论：这种机制对于现代Web应用程序具有特别重要的意义————它们广泛依赖HTTP cookie来维护经过身份验证的用户会话。
 因为服务器会根据HTTP cookie信息来发布敏感信息/执行状态改变操作。
 说明：在客户端必须要维护“由不相关站点提供的内容之间”的严格分离，
 以防止数据机密性或完整性的丢失。
 
 记住同源策略仅适用于脚本！！！
 这意味着可以通过相应的HTML标签来实现“跨源访问”图像、CSS和动态加载脚本等资源
 （注：字体是一个值得注意的例外）。
 比如，“跨站点请求伪造攻击”就利用了{同源策略不适用于HTML标签}的事实。
 
---
跨站点请求伪造（Cross-site request foregy）

跨站点请求伪造，也称为一键式攻击或会话搭乘，缩写为CSRF（有时发音为sea-surf [1]）或XSRF。
它是对某个网站的恶意利用————（how？）“未经授权的命令”会从“被应用信任的用户”传输到网站中；
恶意网站可以通过多种方式传输此类命令;
例如，特制的图像标签，隐藏的表单和JavaScript XMLHttpRequests都可以在没有用户交互/察觉的情况下工作。
与利用“用户对特定站点的信任”的“跨站点脚本（XSS）”不同，CSRF利用站点在用户浏览器的信任。

评论：在“站点”与“用户浏览器”通信的过程中，由于双方并不清楚对方的真实身份。这为攻击者提供了很多可乘之机~
---
WebDriver是一个关键接口的名称，针对它应该使用Java进行一系列的测试。
程序员应该使用的实现类列表如下：
ChromeDriver, EventFiringWebDriver, 
FirefoxDriver, HtmlUnitDriver, 
InternetExplorerDriver, PhantomJSDriver,
RemoteWebDriver, SafariDriver

有关Selenium WebDriver的更多信息，请参阅文档和远程控制到WebDriver迁移说明。





 
 
 
 
