Log4j 2被提名为JAX创新奖！

您喜欢它的性能，无垃圾日志记录以及简单灵活的配置吗？

Log4j 2需要你的爱。投票给Log4j 2！

生命尽头
2015年8月5日，Logging服务项目管理委员会宣布Log4j 1.x已达到使用寿命。
有关公告的完整文本，请参阅Apache博客。
建议Log4j 1的用户升级到Apache Log4j 2。

Apache log4j™1.2
欢迎使用Apache log4j，它是Java的日志库。
Apache log4j是一个Apache Software Foundation Project，
由Apache Software Foundation的一个专门的Committers团队开发。
有关详细信息，请参阅Apache Software Foundation。
Apache log4j也是一个名为Apache Logging的项目的一部分。请参阅许可证。

如果您对最近的更改感兴趣，请访问我们的更改报告。

为什么需要日志？
将日志语句插入代码是一种调试它的低技术方法。
它也可能是唯一的方法，因为调试器并不总是可用或适用————分布式应用程序通常就是这种情况。

另一方面，有些人认为日志语句会污染源代码并降低可读性。（我们认为恰恰相反）。
在预处理器不可用的Java语言中，即使关闭日志记录，日志语句也会增加代码的大小并降低其速度。
鉴于合理大小的应用程序可能包含数千个日志语句，速度特别重要。

为什么要用log4j？
使用log4j，可以在运行时启用日志记录而无需修改应用程序二进制文件。
log4j包的设计使得这些语句可以保留在已发布的代码中，而不会产生很高的性能成本。
可以通过编辑配置文件来控制日志记录行为，而无需触及应用程序二进制文件。

日志记录为开发人员提供了应用程序故障的详细上下文。
另一方面，测试提供了应用程序的质量保证和信心。
不应混淆记录和测试。它们是互补的。
当日志记录被明智地使用时，它会是一个必不可少的工具。

log4j的一个显着特征是记录器中的继承概念。
使用记录器层次结构，可以控制以“任意精细的粒度”输出“哪些日志语句”，而且也非常容易。
这有助于减少记录的输出量和记录成本。

日志输出的目标可以是文件、OutputStream、java.io.Writer，
远程log4j服务器、远程Unix Syslog守护程序或许多其他输出目标。


性能：
在运行JDK 1.3.1的时钟为800Mhz的AMD Duron上，确定是否应记录日志记录语句需要大约5纳秒。
真实的日志记录也非常快————使用SimpleLayout时为21微秒，使用TTCCLayout时为37微秒。
PatternLayout的性能几乎与专用布局一样好，而且它更灵活。


